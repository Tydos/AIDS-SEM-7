# -*- coding: utf-8 -*-
"""DL1B-XOR gate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s0VS3rAxONw21-MX7Ex20Am8UIL09HRn
"""

import numpy as np
import pandas as pd
import tensorflow
from tensorflow import keras
from keras import Sequential
from keras.layers import Dense

df = pd.DataFrame([[0,0,0],[0,1,1],[1,0,1],[1,1,0]],columns=['x','y','xor'])

model = Sequential()

model.add(Dense(4,activation='sigmoid',input_dim=2))
# model.add(Dense(2,activation='sigmoid'))
model.add(Dense(1,activation='sigmoid'))

model.summary()

optimizer =  keras.optimizers.Adam(learning_rate=0.1)
model.compile(loss='binary_crossentropy',optimizer=optimizer,metrics=['accuracy'])

model.fit(df.iloc[:,0:-1].values,df['xor'].values,epochs=10,verbose=1,batch_size=1)

x_new = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
predictions = [1 if prediction > 0.5 else 0 for prediction in model.predict(x_new)]
for i in range(len(x_new)):
    print(f"Input: {x_new[i]}, Predicted Output: {predictions[i]}")